name: Deploy DongTai Server To Dev

on:
  push:
    branches:
      - main
      - beta
      - develop
  workflow_dispatch:
    inputs:
      agent_version:
        required: true
        type: string

jobs:
  Deploy-to-dev:
    if: ${{ github.event_name == 'workflow_dispatch' || github.repository_owner == 'HXSecurity' }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version
        id: version
        run: echo ::set-output name=GITHUB_REF::${GITHUB_REF##*/}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Aliyun Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY_HONGKONG }}
          username: ${{ secrets.ALIYUN_DOCKERHUB_USER }}
          password: ${{ secrets.ALIYUN_DOCKERHUB_PASSWORD }}

      - name: Generate version file
        run: |
          #bash .github/workflows/config_update.sh
          #bash .github/workflows/config_update.sh "${{ steps.release.outputs.VERSION }}"

      - name: Setup Ossutil
        uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: ${{ secrets.CHART_OSS_ENDPOINT }}
          access-key-id: ${{ secrets.CHART_OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.CHART_OSS_ACCESS_KEY_SECRET }}
          
      - name: Download Agent dev
#        if: ${{ steps.version.outputs.GITHUB_REF }} == develop || ${{ steps.version.outputs.GITHUB_REF }} == beta || ${{ steps.version.outputs.GITHUB_REF }} == main
        run: |
          if [ ${{ steps.version.outputs.GITHUB_REF }} = develop ] ; then ossutil cp oss://dongtai-helm-charts/agent_test/java/latest/ ./ --include "*.jar" -r
          else  ossutil cp oss://dongtai-helm-charts/agent_${{ steps.version.outputs.GITHUB_REF }}/java/latest/ ./ --include "*.jar" -r
          fi

      - name: Download Agent  ${{ inputs.agent_version }}
        if: ${{ inputs.agent_version }}
        run: |
          ossutil cp oss://dongtai/agent/java/${{ inputs.agent_version }}/ ./ --include "*.jar" -r

      - name: Generate version file
        run: |
          echo "REPLACE INTO project_version_control (version, component_name, component_version_hash) VALUES('${{ github.run_number }}.0.0', '${{ github.event.repository.name }}', '${GITHUB_SHA}');" >> ./deploy/docker/version.sql

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          context: .
          push: true
          platforms: linux/amd64
          tags: | 
            registry.cn-hongkong.aliyuncs.com/secnium/dongtai-server:${{ steps.version.outputs.GITHUB_REF }}-latest
            registry.cn-hongkong.aliyuncs.com/secnium/dongtai-server:${{ steps.version.outputs.GITHUB_REF }}-1.0.${{github.run_number}}

      - name: Set the value
        id: release
        run: |
          if [ ${{ steps.version.outputs.GITHUB_REF }} = develop ] ; then echo "helm_ns=test" >> $GITHUB_ENV; echo "helm_mysql=test" >> $GITHUB_ENV 
          elif [ ${{ steps.version.outputs.GITHUB_REF }} = beta ] ; then echo "helm_ns=beta" >> $GITHUB_ENV; echo "helm_mysql=beta" >> $GITHUB_ENV 
          else echo "helm_ns=main" >> $GITHUB_ENV ; echo "helm_mysql=temp" >> $GITHUB_ENV ;fi

      - name: deploy to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_TEST_DATA }}
        with:
          args: |
            git clone https://github.com/HXSecurity/DongTai.git
            helm upgrade --install huoxian --create-namespace -n iast-${{ env.helm_ns }} ./DongTai/deploy/kubernetes/helm/ \
            --set sca.sca_token=${{ secrets.TOKEN_SCA }} --set usb.usb_token=${{ secrets.TOKEN_SCA }} --set mysql.host=iast-mysql-${{ env.helm_mysql }}.huoxian.cn \
            --set tag=${{ steps.version.outputs.GITHUB_REF }}-latest --set build.server_number=iast${{github.run_number}} --set develop.agentZip=${{ env.helm_ns }} --values https://charts.dongtai.io/devops.yaml