apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    pv.kubernetes.io/bind-completed: "yes"
    pv.kubernetes.io/bound-by-controller: "yes"
  name: app-agent-pvc
  namespace: CHANGE_THIS_NAMESPACE
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2G
  storageClassName: #您的存储类名字
  #volumeMode: Filesystem
  #volumeName: 您的pv名字
---
# 创建配置文件
apiVersion: v1
data:
  # 您的数据库连接地址/您的数据库名字
  database: dongtai-mysql:3306/dongtai_webapi
  username: root
  password: dongtai-iast
kind: ConfigMap
metadata:
  name: logstash-cm
  namespace: CHANGE_THIS_NAMESPACE
---
apiVersion: v1
data:
  config.ini: |-
    [mysql]
    host = dongtai-mysql
    port = 3306
    name = dongtai_webapi
    user = root
    password = dongtai-iast

    [redis]
    host = dongtai-redis
    port = 6379
    password = 123456
    db = 0

    [engine]
    url = http://dongtai-engine-svc:80

    [apiserver]
    #url = http://dongtai-openapi-svc:80
    url = http://dongtai-web-pub-svc:80

    [security]
    csrf_trust_origins = .huoxian.cn:1024,.huoxian.cn,.example.com

    [smtp]
    server = smtp_server
    user = smtp_user
    password = smtp_password
    from_addr = from_addr
    ssl = False
    cc_addr = cc_addr
    port = 2525

    [sca]
    base_url = http://dongtai-server-svc:80/sca/v1

    [task]
    retryable = true
    max_retries = 3
    async_send = true
    async_send_delay = 5

    [log_service]
    host = dongtai-logstash-svc
    port = 8083

    [common_file_path]
    tmp_path = /tmp/logstash
    report_img = report/img
    report_pdf = report/pdf
    report_word = report/word
    report_excel = report/excel

    [other]
    domain = http://localhost.domain/
    demo_session_cookie_domain = .huoxian.cn
    logging_level = INFO
    cache_preheat = True

kind: ConfigMap
metadata:
  name: dongtai-iast-config.ini
  namespace: CHANGE_THIS_NAMESPACE
---
# dongtai-server服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dongtai-server
  namespace: CHANGE_THIS_NAMESPACE
  annotations:
    kubesphere.io/description: dongtai-server
  labels:
    app: dongtai-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dongtai-server
  template:
    metadata:
      labels:
        app: dongtai-server
    spec:
      containers:
        - name: dongtai-server-container
          image: dongtai/dongtai-server:CHANGE_THIS_VERSION
          imagePullPolicy: Always
          volumeMounts:
            - name: configfile
              mountPath: /opt/dongtai/dongtai_conf/conf/config.ini
              subPath: config.ini
            - name: log-path
              mountPath: /tmp/logstash
          resources:
            limits:
              cpu: "500m"
              memory: 1000Mi
            requests:
              cpu: "500m"
              memory: 1000Mi
      volumes:
        - name: configfile
          configMap:
            name: dongtai-iast-config.ini
        - name: log-path
          persistentVolumeClaim:
            claimName: app-agent-pvc
---
# dongtai-web服务
apiVersion: v1
kind: Service
metadata:
  name: dongtai-server-svc
  namespace: CHANGE_THIS_NAMESPACE
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8000
  selector:
    app: dongtai-server
  type: ClusterIP
---
# 创建nginx.conf配置
apiVersion: v1
data:
  nginx.conf: |-
    #user  nobody;
     worker_processes  auto;
     events {
         worker_connections  65535;
     }
     http {
         include       mime.types;
         default_type  application/octet-stream;
         sendfile        on;
         keepalive_timeout  65;

         #gzip  on;
         gzip on;
         gzip_min_length  5k;
         gzip_buffers     4 16k;
         #gzip_http_version 1.0;
         gzip_comp_level 3;
         gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
         gzip_vary on;

         server {
             listen  80;
             server_name 0.0.0.0;
             client_max_body_size 100M;
             location / {
                 root /usr/share/nginx/html;   #站点目录
                 index index.html index.htm;   #添加属性。
                 try_files $uri $uri/ /index.html;
             }
             location /api/ {
               proxy_read_timeout 60;
               proxy_pass http://dongtai-server-svc:80/api/;
             }
             location /upload/ {
               proxy_pass http://dongtai-server-svc:80/upload/;
             }
             location /openapi/ {
              proxy_set_header X-real-ip $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header User-Agent $http_user_agent;
              proxy_set_header X-Host $http_x_forwarded_host;
              proxy_read_timeout 60;
              proxy_pass http://dongtai-server-svc:80/;
             }
             location /log/ {
              proxy_pass http://dongtai-logstash-svc:8082/;
             }
             location = /50x.html {
                 root   /usr/share/nginx/html;
             }
         }
     }
kind: ConfigMap
metadata:
  name: dongtai-web-nginx-conf
  namespace: CHANGE_THIS_NAMESPACE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dongtai-web
  namespace: CHANGE_THIS_NAMESPACE
  annotations:
    kubesphere.io/description: dongtai前端项目
  labels:
    app: dongtai-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dongtai-web
  template:
    metadata:
      labels:
        app: dongtai-web
    spec:
      containers:
        - name: dongtai-web-container
          image: dongtai/dongtai-web:CHANGE_THIS_VERSION
          imagePullPolicy: Always
          volumeMounts:
            - name: configfile
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          resources:
            limits:
              cpu: "500m"
              memory: 1000Mi
            requests:
              cpu: "500m"
              memory: 1000Mi
      volumes:
        - name: configfile
          configMap:
            name: dongtai-web-nginx-conf
---
#dongtai-worker-task服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dongtai-worker-task
  namespace: CHANGE_THIS_NAMESPACE
  annotations:
    kubesphere.io/description: dongtai-worker-task
  labels:
    app: dongtai-worker-task
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dongtai-worker-task
  template:
    metadata:
      labels:
        app: dongtai-worker-task
    spec:
      containers:
        - name: dongtai-worker-task-container
          image: dongtai/dongtai-server:CHANGE_THIS_VERSION
          command: [ "/bin/bash","/opt/dongtai/deploy/docker/entrypoint.sh" ]
          args: [ "beat" ]
          imagePullPolicy: Always
          volumeMounts:
            - name: configfile
              mountPath: /opt/dongtai/dongtai_conf/conf/config.ini
              subPath: config.ini
          resources:
            limits:
              cpu: "500m"
              memory: 1000Mi
            requests:
              cpu: "500m"
              memory: 1000Mi
      volumes:
        - name: configfile
          configMap:
            name: dongtai-iast-config.ini
---
# dongtai-worker-high-freq服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dongtai-worker-high-freq
  namespace: CHANGE_THIS_NAMESPACE
  annotations:
    kubesphere.io/description: dongtai-worker-high-freq
  labels:
    app: dongtai-worker-high-freq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dongtai-worker-high-freq
  template:
    metadata:
      labels:
        app: dongtai-worker-high-freq
    spec:
      containers:
        - name: dongtai-worker-high-freq-container
          image: dongtai/dongtai-server:CHANGE_THIS_VERSION
          command: [ "/bin/sh","/opt/dongtai/deploy/docker/entrypoint.sh" ]
          args: [ "worker-high-freq" ]
          imagePullPolicy: Always
          volumeMounts:
            - name: configfile
              mountPath: /opt/dongtai/dongtai_conf/conf/config.ini
              subPath: config.ini
          resources:
            limits:
              cpu: "500m"
              memory: 1000Mi
            requests:
              cpu: "500m"
              memory: 1000Mi
      volumes:
        - name: configfile
          configMap:
            name: dongtai-iast-config.ini
---
# dongtai-worker-beat服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dongtai-worker-beat
  namespace: CHANGE_THIS_NAMESPACE
  annotations:
    kubesphere.io/description: dongtai-worker-beat
  labels:
    app: dongtai-worker-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dongtai-worker-beat
  template:
    metadata:
      labels:
        app: dongtai-worker-beat
    spec:
      containers:
        - name: dongtai-worker-beat-container
          image: dongtai/dongtai-server:CHANGE_THIS_VERSION
          command: [ "/bin/sh","/opt/dongtai/deploy/docker/entrypoint.sh" ]
          args: [ "worker-beat" ]
          imagePullPolicy: Always
          volumeMounts:
            - name: configfile
              mountPath: /opt/dongtai/dongtai_conf/conf/config.ini
              subPath: config.ini
          resources:
            limits:
              cpu: "500m"
              memory: 1000Mi
            requests:
              cpu: "500m"
              memory: 1000Mi
      volumes:
        - name: configfile
          configMap:
            name: dongtai-iast-config.ini

---
# dongtai-worker-other服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dongtai-worker-other
  namespace: CHANGE_THIS_NAMESPACE
  annotations:
    kubesphere.io/description: dongtai-worker-other
  labels:
    app: dongtai-worker-other
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dongtai-worker-other
  template:
    metadata:
      labels:
        app: dongtai-worker-other
    spec:
      containers:
        - name: dongtai-worker-other-container
          image: dongtai/dongtai-server:CHANGE_THIS_VERSION
          command: [ "/bin/sh","/opt/dongtai/deploy/docker/entrypoint.sh" ]
          args: [ "worker-other" ]
          imagePullPolicy: Always
          volumeMounts:
            - name: configfile
              mountPath: /opt/dongtai/dongtai_conf/conf/config.ini
              subPath: config.ini
          resources:
            limits:
              cpu: "500m"
              memory: 1000Mi
            requests:
              cpu: "500m"
              memory: 1000Mi
      volumes:
        - name: configfile
          configMap:
            name: dongtai-iast-config.ini
---

#dongtai-logstash服务
apiVersion: v1
kind: Service
metadata:
  name: dongtai-logstash-svc
  namespace: CHANGE_THIS_NAMESPACE
spec:
  type: ClusterIP
  ports:
    - name: agent-http
      port: 8082
      targetPort: 8082
      protocol: TCP
    - name: log-http
      port: 8083
      targetPort: 8083
      protocol: TCP
  selector:
    app: dongtai-logstash
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dongtai-logstash
  namespace: CHANGE_THIS_NAMESPACE
  labels:
    app: dongtai-logstash
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: dongtai-logstash
  template:
    metadata:
      annotations:
        build_number: "dongtai-logstash"
      labels:
        app: dongtai-logstash
    spec:
      containers:
      - image: dongtai/dongtai-logstash:CHANGE_THIS_VERSION
        name: logstash
        securityContext:
          runAsUser: 0
        imagePullPolicy: Always
        env:
        - name: DATABASE
          valueFrom:
            configMapKeyRef:
              key: database
              name: logstash-cm
        - name: USERNAME
          valueFrom:
            configMapKeyRef:
              key: username
              name: logstash-cm
        - name: PASSWORD
          valueFrom:
            configMapKeyRef:
              key: password
              name: logstash-cm
        ports:
        - containerPort: 8082
          protocol: TCP
          name: agent-http
        - containerPort: 8083
          protocol: TCP
          name: log-http
        volumeMounts:
        - name: log-path
          mountPath: /tmp/logstash
        resources:
          requests:
            cpu: 1500m
            memory: 2200Mi
          limits:
            cpu: 2000m
            memory: 3200Mi
        livenessProbe:
          failureThreshold: 1
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 9600
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 9600
          timeoutSeconds: 1
        startupProbe:
          failureThreshold: 40
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 9600
          timeoutSeconds: 1
      - image: dongtai/dongtai-logrotate:CHANGE_THIS_VERSION
        name: logrotate
        securityContext:
          runAsUser: 0
        imagePullPolicy: Always
        volumeMounts:
        - name: log-path
          mountPath: /tmp/logstash
      volumes:
      - name: log-path
        persistentVolumeClaim:
          claimName: app-agent-pvc
---